{"version":3,"sources":["components/ResizeButton/ResizeButton.module.css","components/InputArea/InputArea.module.css","components/MarkedArea/MarkedArea.module.css","components/ResizeButton/ResizeButton.js","components/Window/Window.js","components/InputArea/InputArea.js","components/MarkedArea/MarkedArea.js","assets/initialMarked.md","index.js","components/Window/Window.module.css"],"names":["module","exports","ResizeButton","changeVisibility","changeWindowSize","icon","onClick","className","styles","resizeButton","Window","setRequestingWindow","titleName","children","useState","windowSizeIsSmall","setWindowSize","requestingWindow","useRef","window","invisible","ref","titleBar","text","faExpandArrowsAlt","faCompressArrowsAlt","windowContent","InputArea","handleInput","input","id","inputArea","onChange","value","MarkedArea","markedText","markedArea","dangerouslySetInnerHTML","__html","App","setInput","setMarkedText","windowClassName","setWindowClassName","visibility","setVisibility","markText","dirtyInput","marked","cleanedInput","DOMPurify","sanitize","object","current","useEffect","fetch","file","then","result","windowStyles","biggerWindow","event","target","setOptions","highlight","code","hljs","highlightAuto","breaks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa57b6ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resizeButton\":\"ResizeButton_resizeButton__qCr1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"InputArea_inputArea__3PlNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markedArea\":\"MarkedArea_markedArea__2Um6_\"};","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"./ResizeButton.module.css\";\n\nfunction ResizeButton({ changeVisibility, changeWindowSize, icon }) {\n  const onClick = () => {\n    changeVisibility();\n    changeWindowSize();\n  };\n\n  return (\n    <button onClick={onClick} className={styles.resizeButton}>\n      <FontAwesomeIcon icon={icon} />\n    </button>\n  );\n}\n\nexport default ResizeButton;\n","import { useState, useRef } from \"react\";\nimport {\n  faExpandArrowsAlt,\n  faCompressArrowsAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ResizeButton from \"../ResizeButton/ResizeButton\";\nimport styles from \"./Window.module.css\";\n\nfunction Window({\n  setRequestingWindow,\n  className,\n  titleName,\n  changeVisibility,\n  changeWindowSize,\n  children,\n}) {\n  const [windowSizeIsSmall, setWindowSize] = useState(true);\n\n  const requestingWindow = useRef();\n\n  function changeWindowSize() {\n    setWindowSize(!windowSizeIsSmall);\n    setRequestingWindow(requestingWindow);\n  }\n\n  return (\n    <div\n      className={className === \"window\" ? styles.window : styles.invisible}\n      ref={requestingWindow}\n    >\n      <div className={styles.titleBar}>\n        <p className={styles.text}>{titleName}</p>\n        <ResizeButton\n          changeVisibility={changeVisibility}\n          icon={windowSizeIsSmall ? faExpandArrowsAlt : faCompressArrowsAlt}\n          changeWindowSize={changeWindowSize}\n        />\n      </div>\n      <div className={styles.windowContent}>{children}</div>\n    </div>\n  );\n}\n\nexport default Window;\n","import styles from \"./InputArea.module.css\";\n\nfunction InputArea({ handleInput, input }) {\n  return (\n    <textarea\n      id=\"editor\"\n      className={styles.inputArea}\n      onChange={handleInput}\n      value={input}\n    ></textarea>\n  );\n}\n\nexport default InputArea;\n","import styles from \"./MarkedArea.module.css\";\n\nfunction MarkedArea({ markedText }) {\n  return (\n    <div\n      id=\"preview\"\n      className={styles.markedArea}\n      dangerouslySetInnerHTML={{ __html: markedText }}\n    ></div>\n  );\n}\n\nexport default MarkedArea;\n","export default __webpack_public_path__ + \"static/media/initialMarked.829eb3ae.md\";","import React, { useEffect, useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\nimport \"./index.css\";\nimport Window from \"./components/Window/Window\";\nimport InputArea from \"./components/InputArea/InputArea\";\nimport MarkedArea from \"./components/MarkedArea/MarkedArea\";\nimport file from \"./assets/initialMarked.md\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/default.css\";\nimport windowStyles from \"./components/Window/Window.module.css\";\n\nmarked.setOptions({\n  highlight: function (code) {\n    return hljs.highlightAuto(code).value;\n  },\n  breaks: true,\n});\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [markedText, setMarkedText] = useState(null);\n  const [windowClassName, setWindowClassName] = useState(\"window\");\n  const [visibility, setVisibility] = useState(true);\n\n  const requestingWindow = useRef(null);\n\n  function handleInput(event) {\n    setInput(event.target.value);\n    markText(event.target.value);\n  }\n\n  function markText(text) {\n    const dirtyInput = marked(text);\n    const cleanedInput = DOMPurify.sanitize(dirtyInput);\n    setMarkedText(cleanedInput);\n  }\n\n  const changeVisibility = () => {\n    setVisibility(!visibility);\n    setWindowClassName(visibility ? \"invisible\" : \"window\");\n  };\n\n  const setRequestingWindow = (object) => {\n    requestingWindow.current = object.current;\n  };\n\n  useEffect(() => {\n    fetch(file)\n      .then((result) => result.text())\n      .then((text) => {\n        setInput(text);\n        markText(text);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!visibility)\n      requestingWindow.current.className = windowStyles.biggerWindow;\n  }, [visibility]);\n\n  return (\n    <div className=\"content-box\">\n      <Window\n        setRequestingWindow={setRequestingWindow}\n        className={windowClassName}\n        changeVisibility={changeVisibility}\n        titleName=\"Text to be marked\"\n      >\n        <InputArea input={input} handleInput={handleInput} />\n      </Window>\n      <Window\n        setRequestingWindow={setRequestingWindow}\n        className={windowClassName}\n        changeVisibility={changeVisibility}\n        titleName=\"Marked result\"\n      >\n        <MarkedArea markedText={markedText} />\n      </Window>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__uDx5P\",\"biggerWindow\":\"Window_biggerWindow__3PVjF\",\"windowContent\":\"Window_windowContent__2g6ga\",\"titleBar\":\"Window_titleBar__w9buU\",\"text\":\"Window_text__1kMsZ\",\"invisible\":\"Window_invisible__1SP98\",\"bigger-window\":\"Window_bigger-window__3kTzv\"};"],"sourceRoot":""}