{"version":3,"sources":["ResizeButton.js","Window.js","InputArea.js","MarkedArea.js","initialMarked.md","index.js"],"names":["ResizeButton","props","onClick","changeWindowSize","className","icon","Window","useState","windowSizeIsSmall","setWindowSize","name","setName","useEffect","document","getElementsByClassName","length","elements","titleName","showPath","faExpandArrowsAlt","faCompressArrowsAlt","event","elem","target","parentNode","windowContent","InputArea","id","onChange","handleInput","value","input","MarkedArea","dangerouslySetInnerHTML","__html","markedText","App","setInput","setMarkedText","markText","text","dirtyInput","marked","cleanedInput","DOMPurify","sanitize","fetch","file","then","result","setOptions","highlight","code","hljs","highlightAuto","breaks","ReactDOM","render","getElementById"],"mappings":"mPAUeA,MARf,SAAsBC,GACpB,OACE,wBAAQC,QAASD,EAAME,iBAAkBC,UAAU,eAAnD,SACE,cAAC,IAAD,CAAiBC,KAAMJ,EAAMI,UCkDpBC,MAhDf,SAAgBL,GACd,MAA2CM,oBAAS,GAApD,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAwBF,mBAAS,UAAjC,mBAAOG,EAAP,KAAaC,EAAb,KA+BA,OAdAC,qBAAU,WACR,GAAIC,SAASC,uBAAuB,iBAAiBC,OAAS,EAAG,CAC/D,IAD+D,EAC3DC,EAAWH,SAASC,uBAAuB,UADgB,cAE9CE,GAF8C,IAE/D,2BAA2B,SACpBZ,UAAY,oBAH4C,mCAK1D,CACL,IADK,EACDY,EAAWH,SAASC,uBAAuB,oBAD1C,cAEYE,GAFZ,IAEL,2BAA2B,SACpBZ,UAAY,UAHd,kCAMN,CAACM,IAGF,sBAAKN,UAAWM,EAAhB,UACE,sBAAKN,UAAU,YAAf,UACE,4BAAIH,EAAMgB,YACV,cAAC,EAAD,CACEC,SAAUjB,EAAMiB,SAChBb,KAAMG,EAAoBW,IAAoBC,IAC9CjB,iBApCR,SAA0BkB,GACxBZ,GAAeD,GACf,IACE,IAAIc,EAAOD,EAAME,OACE,gBAAnBD,EAAKlB,UACLkB,EAAOA,EAAKE,WAEW,WAAnBF,EAAKlB,UACPO,EAAQ,iBACoB,kBAAnBW,EAAKlB,WACdO,EAAQ,gBA6BV,qBAAKP,UAAU,gBAAf,SAAgCH,EAAMwB,oBCvC7BC,MAXf,SAAmBzB,GACjB,OACE,0BACE0B,GAAG,SACHvB,UAAU,8BACVwB,SAAU3B,EAAM4B,YAChBC,MAAO7B,EAAM8B,SCIJC,MAVf,SAAoB/B,GAClB,OACE,qBACE0B,GAAG,UACHvB,UAAU,+BACV6B,wBAAyB,CAAEC,OAAQjC,EAAMkC,eCLhC,MAA0B,yC,wBCmBzC,SAASC,IACP,MAA0B7B,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcM,EAAd,KACA,EAAoC9B,mBAAS,MAA7C,mBAAO4B,EAAP,KAAmBG,EAAnB,KAOA,SAASC,EAASC,GAChB,IAAMC,EAAaC,IAAOF,GACpBG,EAAeC,IAAUC,SAASJ,GACxCH,EAAcK,GAYhB,OATA/B,qBAAU,WACRkC,MAAMC,GACHC,MAAK,SAACC,GAAD,OAAYA,EAAOT,UACxBQ,MAAK,SAACR,GACLH,EAASG,GACTD,EAASC,QAEZ,IAGD,sBAAKpC,UAAU,cAAf,UACE,cAAC,EAAD,CACEa,UAAU,oBACVQ,cAAe,cAAC,EAAD,CAAWM,MAAOA,EAAOF,YAxB9C,SAAqBR,GACnBgB,EAAShB,EAAME,OAAOO,OACtBS,EAASlB,EAAME,OAAOO,YAwBpB,cAAC,EAAD,CACEb,UAAU,gBACVQ,cAAe,cAAC,EAAD,CAAYU,WAAYA,SAvC/CO,IAAOQ,WAAW,CAChBC,UAAW,SAAUC,GACnB,OAAOC,IAAKC,cAAcF,GAAMtB,OAElCyB,QAAQ,IAyCVC,IAASC,OAAO,cAACrB,EAAD,IAASvB,SAAS6C,eAAe,U","file":"static/js/main.f83b298f.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction ResizeButton(props) {\n  return (\n    <button onClick={props.changeWindowSize} className=\"resizeButton\">\n      <FontAwesomeIcon icon={props.icon} />\n    </button>\n  );\n}\n\nexport default ResizeButton;\n","import { useEffect, useState } from \"react\";\nimport {\n  faExpandArrowsAlt,\n  faCompressArrowsAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ResizeButton from \"./ResizeButton\";\n\nfunction Window(props) {\n  const [windowSizeIsSmall, setWindowSize] = useState(true);\n  const [name, setName] = useState(\"window\");\n\n  function changeWindowSize(event) {\n    setWindowSize(!windowSizeIsSmall);\n    for (\n      let elem = event.target;\n      elem.className !== \"content-box\";\n      elem = elem.parentNode\n    ) {\n      if (elem.className === \"window\") {\n        setName(\"bigger-window\");\n      } else if (elem.className === \"bigger-window\") {\n        setName(\"window\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (document.getElementsByClassName(\"bigger-window\").length > 0) {\n      let elements = document.getElementsByClassName(\"window\");\n      for (let elem of elements) {\n        elem.className = \"window invisible\";\n      }\n    } else {\n      let elements = document.getElementsByClassName(\"window invisible\");\n      for (let elem of elements) {\n        elem.className = \"window\";\n      }\n    }\n  }, [name]);\n\n  return (\n    <div className={name}>\n      <div className=\"title-bar\">\n        <p>{props.titleName}</p>\n        <ResizeButton\n          showPath={props.showPath}\n          icon={windowSizeIsSmall ? faExpandArrowsAlt : faCompressArrowsAlt}\n          changeWindowSize={changeWindowSize}\n        />\n      </div>\n      <div className=\"windowContent\">{props.windowContent}</div>\n    </div>\n  );\n}\n\nexport default Window;\n","function InputArea(props) {\n  return (\n    <textarea\n      id=\"editor\"\n      className=\"inputArea inner-window-area\"\n      onChange={props.handleInput}\n      value={props.input}\n    ></textarea>\n  );\n}\n\nexport default InputArea;\n","function MarkedArea(props) {\n  return (\n    <div\n      id=\"preview\"\n      className=\"markedArea inner-window-area\"\n      dangerouslySetInnerHTML={{ __html: props.markedText }}\n    ></div>\n  );\n}\n\nexport default MarkedArea;\n","export default __webpack_public_path__ + \"static/media/initialMarked.61f21c83.md\";","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\nimport \"./index.css\";\nimport Window from \"./Window\";\nimport InputArea from \"./InputArea\";\nimport MarkedArea from \"./MarkedArea\";\nimport file from \"./initialMarked.md\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/default.css\";\n\nmarked.setOptions({\n  highlight: function (code) {\n    return hljs.highlightAuto(code).value;\n  },\n  breaks: true,\n});\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [markedText, setMarkedText] = useState(null);\n\n  function handleInput(event) {\n    setInput(event.target.value);\n    markText(event.target.value);\n  }\n\n  function markText(text) {\n    const dirtyInput = marked(text);\n    const cleanedInput = DOMPurify.sanitize(dirtyInput);\n    setMarkedText(cleanedInput);\n  }\n\n  useEffect(() => {\n    fetch(file)\n      .then((result) => result.text())\n      .then((text) => {\n        setInput(text);\n        markText(text);\n      });\n  }, []);\n\n  return (\n    <div className=\"content-box\">\n      <Window\n        titleName=\"Text to be marked\"\n        windowContent={<InputArea input={input} handleInput={handleInput} />}\n      />\n      <Window\n        titleName=\"Marked result\"\n        windowContent={<MarkedArea markedText={markedText} />}\n      />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}